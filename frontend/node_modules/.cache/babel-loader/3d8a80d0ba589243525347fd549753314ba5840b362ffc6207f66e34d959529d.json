{"ast":null,"code":"var _jsxFileName = \"/Users/denizqian/Documents/pulse-news/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchResults, fetchStats } from './api';\nimport TimeSeriesChart from './components/TimeSeriesChart';\nimport TopList from './components/TopList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [results, setResults] = useState([]);\n  const [stats, setStats] = useState(null);\n  const [statsHistory, setHistory] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const load = async () => {\n      try {\n        const [r, s] = await Promise.all([fetchResults(50), fetchStats(15)]);\n        setResults(r);\n        setStats(s);\n\n        // Only add to history if this is a new data point\n        setHistory(prevHistory => {\n          const lastPoint = prevHistory[prevHistory.length - 1];\n          const newPoint = {\n            timestamp: Math.floor(Date.now() / 1000),\n            // Use current time instead of end_time_utc\n            avg_sentiment: s.average_sentiment\n          };\n\n          // Only add if it's different from the last point or if it's been at least 30 seconds\n          if (!lastPoint || newPoint.timestamp - lastPoint.timestamp >= 30 || Math.abs(newPoint.avg_sentiment - lastPoint.avg_sentiment) > 0.01) {\n            return [...prevHistory, newPoint];\n          }\n          return prevHistory;\n        });\n        console.log('Current stats:', s);\n        console.log('History length:', statsHistory.length);\n      } catch (e) {\n        setError(e.message);\n      }\n    };\n    load();\n    const iv = setInterval(load, 30000); // every 30s\n    return () => clearInterval(iv);\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 20,\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n\n  // split out top positives / negatives\n  const positives = results.filter(i => i.label === 'POSITIVE');\n  const negatives = results.filter(i => i.label === 'NEGATIVE');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDD34 Reddit r/news Sentiment Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), stats ? /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginBottom: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Stats (last \", stats.window_minutes, \" min)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Average sentiment: \", stats.average_sentiment.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Positive: \", stats.positive_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Negative: \", stats.negative_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Total: \", stats.total_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading stats\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        margin: '2rem 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sentiment Over Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TimeSeriesChart, {\n        data: statsHistory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        display: 'flex',\n        gap: '2rem',\n        marginTop: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TopList, {\n        title: \"Top Positive Posts\",\n        items: positives\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TopList, {\n        title: \"Top Negative Posts\",\n        items: negatives\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/vUGv8E56ctSXSpA4e9LlDXNIEk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchResults","fetchStats","TimeSeriesChart","TopList","jsxDEV","_jsxDEV","App","_s","results","setResults","stats","setStats","statsHistory","setHistory","error","setError","load","r","s","Promise","all","prevHistory","lastPoint","length","newPoint","timestamp","Math","floor","Date","now","avg_sentiment","average_sentiment","abs","console","log","e","message","iv","setInterval","clearInterval","style","padding","color","children","fileName","_jsxFileName","lineNumber","columnNumber","positives","filter","i","label","negatives","marginBottom","window_minutes","toFixed","positive_count","negative_count","total_count","margin","data","display","gap","marginTop","title","items","_c","$RefreshReg$"],"sources":["/Users/denizqian/Documents/pulse-news/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchResults, fetchStats } from './api';\nimport TimeSeriesChart from './components/TimeSeriesChart';\nimport TopList from './components/TopList';\n\nfunction App() {\n  const [results, setResults] = useState([]);\n  const [stats, setStats] = useState(null);\n  const [statsHistory, setHistory] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const load = async () => {\n      try {\n        const [r, s] = await Promise.all([\n          fetchResults(50),\n          fetchStats(15)\n        ]);\n\n        setResults(r);\n        setStats(s);\n\n        // Only add to history if this is a new data point\n        setHistory(prevHistory => {\n          const lastPoint = prevHistory[prevHistory.length - 1];\n          const newPoint = { \n            timestamp: Math.floor(Date.now() / 1000), // Use current time instead of end_time_utc\n            avg_sentiment: s.average_sentiment \n          };\n          \n          // Only add if it's different from the last point or if it's been at least 30 seconds\n          if (!lastPoint || \n              (newPoint.timestamp - lastPoint.timestamp >= 30) || \n              (Math.abs(newPoint.avg_sentiment - lastPoint.avg_sentiment) > 0.01)) {\n            return [...prevHistory, newPoint];\n          }\n          \n          return prevHistory;\n        });\n\n        console.log('Current stats:', s);\n        console.log('History length:', statsHistory.length);\n      } catch (e) {\n        setError(e.message);\n      }\n    };\n\n    load();\n    const iv = setInterval(load, 30000); // every 30s\n    return () => clearInterval(iv);\n  }, []);\n\n  if (error) {\n    return <div style={{ padding: 20, color: 'red' }}>\n      {error}\n    </div>;\n  }\n\n  // split out top positives / negatives\n  const positives = results.filter(i => i.label === 'POSITIVE');\n  const negatives = results.filter(i => i.label === 'NEGATIVE');\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h1>ðŸ”´ Reddit r/news Sentiment Dashboard</h1>\n\n      {stats ? (\n        <section style={{ marginBottom: '2rem' }}>\n          <h2>Stats (last {stats.window_minutes} min)</h2>\n          <ul>\n            <li>Average sentiment: {stats.average_sentiment.toFixed(2)}</li>\n            <li>Positive: {stats.positive_count}</li>\n            <li>Negative: {stats.negative_count}</li>\n            <li>Total: {stats.total_count}</li>\n          </ul>\n        </section>\n      ) : (\n        <p>Loading statsâ€¦</p>\n      )}\n\n      <section style={{ margin: '2rem 0' }}>\n        <h2>Sentiment Over Time</h2>\n        <TimeSeriesChart data={statsHistory} />\n      </section>\n\n      {results.length > 0 && (\n        <section style={{ display: 'flex', gap: '2rem', marginTop: '2rem' }}>\n          <TopList title=\"Top Positive Posts\" items={positives} />\n          <TopList title=\"Top Negative Posts\" items={negatives} />\n        </section>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}