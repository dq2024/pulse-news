{"ast":null,"code":"var _jsxFileName = \"/Users/denizqian/Documents/pulse-news/frontend/src/components/TimeSeriesChart.jsx\";\n// TimeSeriesChart.jsx\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport default function TimeSeriesChart({\n  data\n}) {\n  const labels = data.map(d => new Date(d.timestamp * 1000).toLocaleTimeString());\n  const values = data.map(d => d.avg_sentiment);\n  const chartData = {\n    labels,\n    datasets: [{\n      label: 'Avg Sentiment',\n      data: values,\n      fill: false\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: chartData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n}\n_c = TimeSeriesChart;\nvar _c;\n$RefreshReg$(_c, \"TimeSeriesChart\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","jsxDEV","_jsxDEV","register","TimeSeriesChart","data","labels","map","d","Date","timestamp","toLocaleTimeString","values","avg_sentiment","chartData","datasets","label","fill","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/denizqian/Documents/pulse-news/frontend/src/components/TimeSeriesChart.jsx"],"sourcesContent":["// TimeSeriesChart.jsx\nimport React from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport default function TimeSeriesChart({ data }) {\n  const labels = data.map(d => new Date(d.timestamp * 1000).toLocaleTimeString());\n  const values = data.map(d => d.avg_sentiment);\n\n  const chartData = {\n    labels,\n    datasets: [\n      { label: 'Avg Sentiment', data: values, fill: false }\n    ]\n  };\n\n  return <Line data={chartData} />;\n}"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvCV,OAAO,CAACW,QAAQ,CACdV,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,eAAe,SAASK,eAAeA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAChD,MAAMC,MAAM,GAAGD,IAAI,CAACE,GAAG,CAACC,CAAC,IAAI,IAAIC,IAAI,CAACD,CAAC,CAACE,SAAS,GAAG,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;EAC/E,MAAMC,MAAM,GAAGP,IAAI,CAACE,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACK,aAAa,CAAC;EAE7C,MAAMC,SAAS,GAAG;IAChBR,MAAM;IACNS,QAAQ,EAAE,CACR;MAAEC,KAAK,EAAE,eAAe;MAAEX,IAAI,EAAEO,MAAM;MAAEK,IAAI,EAAE;IAAM,CAAC;EAEzD,CAAC;EAED,oBAAOf,OAAA,CAACF,IAAI;IAACK,IAAI,EAAES;EAAU;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAClC;AAACC,EAAA,GAZuBlB,eAAe;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}