{"ast":null,"code":"var _jsxFileName = \"/Users/denizqian/Documents/pulse-news/frontend/src/components/TimeSeriesChart.jsx\";\n// TimeSeriesChart.jsx\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport default function TimeSeriesChart({\n  data\n}) {\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 14\n    }, this);\n  }\n  const labels = data.map(d => new Date(d.timestamp * 1000).toLocaleTimeString());\n  const values = data.map(d => d.avg_sentiment);\n  const chartData = {\n    labels,\n    datasets: [{\n      label: 'Avg Sentiment',\n      data: values,\n      fill: false,\n      borderColor: 'rgb(75, 192, 192)',\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      tension: 0.1\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Sentiment Over Time'\n      }\n    },\n    scales: {\n      y: {\n        min: -1,\n        max: 1,\n        title: {\n          display: true,\n          text: 'Sentiment Score'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: chartData,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 12\n  }, this);\n}\n_c = TimeSeriesChart;\nvar _c;\n$RefreshReg$(_c, \"TimeSeriesChart\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","jsxDEV","_jsxDEV","register","TimeSeriesChart","data","length","children","fileName","_jsxFileName","lineNumber","columnNumber","labels","map","d","Date","timestamp","toLocaleTimeString","values","avg_sentiment","chartData","datasets","label","fill","borderColor","backgroundColor","tension","options","responsive","plugins","legend","position","title","display","text","scales","y","min","max","_c","$RefreshReg$"],"sources":["/Users/denizqian/Documents/pulse-news/frontend/src/components/TimeSeriesChart.jsx"],"sourcesContent":["// TimeSeriesChart.jsx\nimport React from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport default function TimeSeriesChart({ data }) {\n    if (!data || data.length === 0) {\n      return <div>No data to display</div>;\n    }\n  \n    const labels = data.map(d => new Date(d.timestamp * 1000).toLocaleTimeString());\n    const values = data.map(d => d.avg_sentiment);\n  \n    const chartData = {\n      labels,\n      datasets: [\n        {\n          label: 'Avg Sentiment',\n          data: values,\n          fill: false,\n          borderColor: 'rgb(75, 192, 192)',\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          tension: 0.1\n        }\n      ]\n    };\n  \n    const options = {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: 'top',\n        },\n        title: {\n          display: true,\n          text: 'Sentiment Over Time'\n        }\n      },\n      scales: {\n        y: {\n          min: -1,\n          max: 1,\n          title: {\n            display: true,\n            text: 'Sentiment Score'\n          }\n        }\n      }\n    };\n  \n    return <Line data={chartData} options={options} />;\n  }"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvCV,OAAO,CAACW,QAAQ,CACdV,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,eAAe,SAASK,eAAeA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAC9C,IAAI,CAACA,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;IAC9B,oBAAOJ,OAAA;MAAAK,QAAA,EAAK;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtC;EAEA,MAAMC,MAAM,GAAGP,IAAI,CAACQ,GAAG,CAACC,CAAC,IAAI,IAAIC,IAAI,CAACD,CAAC,CAACE,SAAS,GAAG,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;EAC/E,MAAMC,MAAM,GAAGb,IAAI,CAACQ,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACK,aAAa,CAAC;EAE7C,MAAMC,SAAS,GAAG;IAChBR,MAAM;IACNS,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,eAAe;MACtBjB,IAAI,EAAEa,MAAM;MACZK,IAAI,EAAE,KAAK;MACXC,WAAW,EAAE,mBAAmB;MAChCC,eAAe,EAAE,yBAAyB;MAC1CC,OAAO,EAAE;IACX,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACR;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,GAAG,EAAE,CAAC,CAAC;QACPC,GAAG,EAAE,CAAC;QACNN,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF;IACF;EACF,CAAC;EAED,oBAAOhC,OAAA,CAACF,IAAI;IAACK,IAAI,EAAEe,SAAU;IAACO,OAAO,EAAEA;EAAQ;IAAAnB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpD;AAAC4B,EAAA,GA9CqBnC,eAAe;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}