{"ast":null,"code":"var _jsxFileName = \"/Users/denizqian/Documents/pulse-news/frontend/src/components/TimeSeriesChart.jsx\";\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport default function TimeSeriesChart({\n  data\n}) {\n  if (!data || data.length < 2) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '300px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#f9f9f9',\n        border: '1px solid #ddd',\n        borderRadius: '8px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Need at least 2 data points to show chart (currently have \", (data === null || data === void 0 ? void 0 : data.length) || 0, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n  const labels = data.map(d => new Date(d.timestamp * 1000).toLocaleTimeString());\n  const values = data.map(d => d.avg_sentiment);\n  const chartData = {\n    labels,\n    datasets: [{\n      label: 'Avg Sentiment',\n      data: values,\n      fill: false,\n      borderColor: 'rgb(75, 192, 192)',\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      tension: 0.1,\n      pointRadius: 4,\n      pointHoverRadius: 6\n    }]\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    // This allows us to control height\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Sentiment Over Time'\n      }\n    },\n    scales: {\n      y: {\n        min: -1,\n        max: 1,\n        title: {\n          display: true,\n          text: 'Sentiment Score'\n        },\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Time'\n        },\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '300px',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_c = TimeSeriesChart;\nvar _c;\n$RefreshReg$(_c, \"TimeSeriesChart\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","jsxDEV","_jsxDEV","register","TimeSeriesChart","data","length","style","height","display","alignItems","justifyContent","backgroundColor","border","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","labels","map","d","Date","timestamp","toLocaleTimeString","values","avg_sentiment","chartData","datasets","label","fill","borderColor","tension","pointRadius","pointHoverRadius","options","responsive","maintainAspectRatio","plugins","legend","position","title","text","scales","y","min","max","grid","color","x","width","_c","$RefreshReg$"],"sources":["/Users/denizqian/Documents/pulse-news/frontend/src/components/TimeSeriesChart.jsx"],"sourcesContent":["import React from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport default function TimeSeriesChart({ data }) {\n  if (!data || data.length < 2) {\n    return (\n      <div style={{ \n        height: '300px', \n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'center',\n        backgroundColor: '#f9f9f9',\n        border: '1px solid #ddd',\n        borderRadius: '8px'\n      }}>\n        <p>Need at least 2 data points to show chart (currently have {data?.length || 0})</p>\n      </div>\n    );\n  }\n\n  const labels = data.map(d => new Date(d.timestamp * 1000).toLocaleTimeString());\n  const values = data.map(d => d.avg_sentiment);\n\n  const chartData = {\n    labels,\n    datasets: [\n      {\n        label: 'Avg Sentiment',\n        data: values,\n        fill: false,\n        borderColor: 'rgb(75, 192, 192)',\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        tension: 0.1,\n        pointRadius: 4,\n        pointHoverRadius: 6\n      }\n    ]\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false, // This allows us to control height\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Sentiment Over Time'\n      }\n    },\n    scales: {\n      y: {\n        min: -1,\n        max: 1,\n        title: {\n          display: true,\n          text: 'Sentiment Score'\n        },\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Time'\n        },\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)'\n        }\n      }\n    }\n  };\n\n  return (\n    <div style={{ height: '300px', width: '100%' }}>\n      <Line data={chartData} options={options} />\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}